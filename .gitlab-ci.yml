image:
  name: hashicorp/terraform:0.12.21
  entrypoint:
    - '/usr/bin/env'
    - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'

stages:
  - Test and Lint
  - Build and Push
  - Staging Plan
  - Staging Apply
  - Production Plan
  - Production Apply
  - Destroy

Test and Lint:
  image: docker:19.03.5
  services:
    - docker:19.03.5-dind
  stage: Test and Lint
  script:
    - apk add --update docker-compose
    - docker-compose run --rm app sh -c "python manage.py wait_for_db && python manage.py test && flake8"
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^(main|production)$/ || $CI_COMMIT_BRANCH =~ /^(main|production)$/'

Validate Terraform:
  stage: Test and Lint
  script:
    - cd deploy/
    - terraform init -backend=false
    - terraform validate
    - terraform fmt -check
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^(main|production)$/ || $CI_COMMIT_BRANCH =~ /^(main|production)$/'

Build and Push:
  image: docker:19.03.5
  services:
    - docker:19.03.5-dind
  stage: Build and Push
  script:
    - apk add python3
    - pip3 install awscli
    - docker build --compress -t $ECR_REPO:$CI_COMMIT_SHORT_SHA .
    - $(aws ecr get-login --no-include-email --region us-east-1)
    - docker push $ECR_REPO:CI_COMMIT_SHORT_SHA
    - docker tag $ECR_REPO:$CI_COMMIT_SHORT_SHA $ECR_REPO:latest
    - docker push $ECR_REPO:latest
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^(main|production)$/'

Staging Plan:
  stage: Staging Plan
  script: 
    - echo "Run Terraform Plan for Staging"
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^(main|production)$/'

Staging Apply:
  stage: Staging Apply
  script: 
    - echo "Run Terraform Apply for Staging"
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^(main|production)$/'

Production Plan:
  stage: Production Plan
  script: 
    - echo "Run Terraform Plan for Production"
  rules:
    - if: '$CI_COMMIT_BRANCH == "production"'

Production Apply:
  stage: Production Apply
  script: 
    - echo "Run Terraform Apply for Production"
  rules:
    - if: '$CI_COMMIT_BRANCH == "production"'

Staging Destroy:
  stage: Destroy
  script:
    - echo "Run Terraform Destroy for staging"
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^(main|production)$/'
      when: manual

Production Destroy:
  stage: Destroy
  script:
    - echo "Run Terraform Destroy for Production"
  rules:
    - if: '$CI_COMMIT_BRANCH == "production"'
      when: manual